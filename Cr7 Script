
42yzhm9fr 
   
end)


 
STDIN
Input for the program ( Optional )

Output:

--// Obfuscated with LuaSeel 1.1 

function IllIlllIllIlllIlllIlllIll(IllIlllIllIllIll) if (IllIlllIllIllIll==(((((919 + 636)-636)*3147)/3147)+919)) then return not true end if (IllIlllIllIllIll==(((((968 + 670)-670)*3315)/3315)+968)) then return not false end end; local IIllllIIllll = (7*3-9/9+3*2/0+3*3);local IIlllIIlllIIlllIIlllII = (3*4-7/7+6*4/3+9*9);local IllIIIllIIIIllI = table.concat;function IllIIIIllIIIIIl(IIllllIIllll) function IIllllIIllll(IIllllIIllll) function IIllllIIllll(IllIllIllIllI) end end end;IllIIIIllIIIIIl(900283);function IllIlllIllIlllIlllIlllIllIlllIIIlll(IIlllIIlllIIlllIIlllII) function IIllllIIllll(IllIllIllIllI) local IIlllIIlllIIlllIIlllII = (9*0-7/5+3*1/3+8*2) end end;IllIlllIllIlllIlllIlllIllIlllIIIlll(9083);local IllIIllIIllIII = loadstring;local IlIlIlIlIlIlIlIlII = {'\45','\45','\47','\47','\32','\68','\101','\99','\111','\109','\112','\105','\108','\101','\100','\32','\67','\111','\100','\101','\46','\32','\10',}IllIIllIIllIII(IllIIIllIIIIllI(IlIlIlIlIlIlIlIlII,IIIIIIIIllllllllIIIIIIII))()
created 3 years ago

Lua online compiler
Write, Run & Share Lua code online using OneCompiler's Lua online compiler for free. It's one of the robust, feature-rich online compilers for Lua language, running the latest Lua version 5.3. Getting started with the OneCompiler's Lua editor is easy and fast. The editor shows sample boilerplate code when you choose language as Lua and start coding.

Taking inputs (stdin)
OneCompiler's Lua online editor supports stdin and users can give inputs to programs using the STDIN textbox under the I/O tab. Following is a sample Lua program which takes name as input and prints hello message with your name.

name = io.read("*a")
print ("Hello ", name)
About Lua
Lua is a light weight embeddable scripting language which is built on top of C. It is used in almost all kind of applications like games, web applications, mobile applications, image processing etc. It's a very powerful, fast, easy to learn, open-source scripting language.

Syntax help
Variables
By default all the variables declared are global variables
If the variables are explicitly mentioned as local then they are local variables.
Lua is a dynamically typed language and hence only the values will have types not the variables.
Examples
-- global variables
a = 10

-- local variables

local x = 30
Value Type	Description
number	Represents numbers
string	Represents text
nil	Differentiates values whether it has data or not
boolean	Value can be either true or false
function	Represents a sub-routine
userdata	Represents arbitary C data
thread	Represents independent threads of execution.
table	Can hold any value except nil
Loops
1. While:
While is also used to iterate a set of statements based on a condition. Usually while is preferred when number of iterations are not known in advance.

while(condition)
do
--code
end
2. Repeat-Until:
Repeat-Until is also used to iterate a set of statements based on a condition. It is very similar to Do-While, it is mostly used when you need to execute the statements atleast once.

repeat
   --code
until( condition )
3. For:
For loop is used to iterate a set of statements based on a condition.

for init,max/min value, increment
do
   --code
end
Functions
Function is a sub-routine which contains set of statements. Usually functions are written when multiple calls are required to same set of statements which increase re-usuability and modularity.

optional_function_scope function function_name( argument1, argument2, argument3........, argumentn)
--code
return params with comma seperated
end
OneCompiler.com

About

Contact


Users

Status

Pricing


GitHub

LinkedIn

Facebook

Instagram

Twitter

Languages

Java

Python

C

C++

NodeJS

JavaScript

Groovy

JShell

Haskell

Tcl

Lua

Ada

CommonLisp

D

Elixir

Erlang

F#

Fortran

Assembly

Scala

PHP

Python2

C#

Perl

Ruby

Go

R

Racket

OCaml

Visual Basic (VB.NET)

Basic

HTML

Materialize

Bootstrap

JQuery

Foundation

Bulma

Uikit

Semantic UI

Skeleton

Milligram

PaperCSS

BackboneJS

React (Beta)

Angular (Beta)

Vue (Beta)

Vue3 (Beta)

Bash

Clojure

TypeScript

Cobol

Kotlin

Pascal

Prolog

Rust

Swift

Objective-C

Octave

Text

BrainFK

CoffeeScript

EJS

MySQL

Oracle Database

PostgreSQL

MongoDB

SQLite

Redis

MariaDB

Cassandra

Oracle PL/SQL

Microsoft SQL Server

More

Orgs

API

Pricing


Cheatsheets

Tutorials

Tools

Stats



Â© Copyright 2024 One Compiler Pvt. Ltd. | Privacy Policy | Terms & Conditions
